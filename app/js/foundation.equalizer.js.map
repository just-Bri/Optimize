{"version":3,"sources":["foundation.equalizer.js"],"names":["$","window","document","undefined","Foundation","libs","equalizer","name","version","settings","use_tallest","before_height_change","noop","after_height_change","equalize_on_stack","act_on_hidden_el","init","scope","method","options","inherit","this","bindings","reflow","events","S","off","on","e","bind","equalize","vals","firstTopOffset","isStacked","group","data","attr_name","find","length","height","offset","first","top","each","heights","outerHeight","get","max","apply","css","min","Math","$eq_target","media_query","replace","utils","hasOwnProperty","ignore_media_query","self","image_loaded","jQuery"],"mappings":"CAAC,SAAWA,EAAGC,EAAQC,EAAUC,GAC/B,aAEAC,WAAWC,KAAKC,WACdC,KAAO,YAEPC,QAAU,QAEVC,UACEC,aAAc,EACdC,qBAAuBX,EAAEY,KACzBC,oBAAsBb,EAAEY,KACxBE,mBAAoB,EACpBC,kBAAkB,GAGpBC,KAAO,SAAUC,EAAOC,EAAQC,GAC9Bf,WAAWgB,QAAQC,KAAM,gBACzBA,KAAKC,SAASJ,EAAQC,GACtBE,KAAKE,UAGPC,OAAS,WACPH,KAAKI,EAAExB,GAAQyB,IAAI,cAAcC,GAAG,yBAA0B,SAAUC,GACtEP,KAAKE,UACLM,KAAKR,QAGTS,SAAW,SAAUxB,GACnB,IAGIyB,EACAC,EAJAC,GAAY,EACZC,EAAQ5B,EAAU6B,KAAK,aACvB1B,EAAWH,EAAU6B,KAAKd,KAAKe,WAAU,GAAf,UAAff,KAAgDZ,SAY7D,GAAA,KAPAsB,EADEtB,EAASM,iBACJmB,EAAQ5B,EAAU+B,KAAK,IAAAhB,KAAIe,YAAA,WAAiBF,EAAWA,MAAM5B,EAAQA,KAAAA,IAAU+B,KAAKD,YAASA,WAIrGF,EAAA5B,EAAA+B,KAAA,IAAAhB,KAAAe,YAAA,WAAAF,EAAA,cAAA5B,EAAA+B,KAAA,IAAAhB,KAAAe,YAAA,oBAGCE,SAIFhC,EAAAA,uBACAyB,EAAKQ,QAAO,wCAAZR,EAAKQ,OAAO,YAGoBC,IAA9BR,EAAAA,oBACAD,EAAUA,EAAYU,QAAAD,SAAAE,IACpBX,EAAAY,KAAM,WACJV,GAAAA,EAAAA,MAAAA,SAAAS,MAAAV,EAED,OADCC,GAAA,GACD,KAGDA,IARFD,CAYmC,IAAAY,EAASb,EAAMc,IAAAA,WAAf,OAAA7C,EAAAqB,MAAAwB,aAAA,KAAAC,MAErC,GAAIrC,EAASC,YAAa,CAA1B,IAAID,EAAAA,KAASC,IAAAA,MAAa,KAAAkC,GACxBb,EAAIgB,IAAAA,SAAeC,OACdC,CAFP,IAAAC,EAGOC,KAAAD,IAAAF,MAAA,KAAAJ,GACLb,EAAImB,IAAAA,SAAeF,GAIrBvC,EAASI,sBAATJ,EAASI,QAAAA,yCAIXU,OAAS,WAATA,IAAAA,EAASF,KAGPA,KAAKI,EAAE,IAAMJ,KAAKe,YAAc,IAAKf,KAAKJ,OAAO0B,KAAK,WAAtD,IAAAS,EAAkBhB,EAAAA,MACZgB,EAAapD,EAAjBmC,KAAA,gBACIkB,GAAcD,EAGdC,IAAJA,EAAA,MAAiBA,EAAAC,QAAA,KAAA,KACfD,WAAcE,MAAAC,eAAoBF,KAClCG,GAAqBD,IAKvBE,EAAKC,aAAaD,EAAKjC,EAAE,MAAOJ,MAAO,WAAlCsC,GAAoBvD,WAAcmD,MAAAF,KACrCK,EAAID,SAAAA,GAEGL,EAAAf,KAAA,IAAAqB,EAAAtB,YAAA,mBACDL,IAAAA,SAAOqB,eA7FrBQ,OAAA3D,OAAAA,OAAAC","file":"foundation.equalizer.js","sourcesContent":[";(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.equalizer = {\n    name : 'equalizer',\n\n    version : '5.5.3',\n\n    settings : {\n      use_tallest : true,\n      before_height_change : $.noop,\n      after_height_change : $.noop,\n      equalize_on_stack : false,\n      act_on_hidden_el: false\n    },\n\n    init : function (scope, method, options) {\n      Foundation.inherit(this, 'image_loaded');\n      this.bindings(method, options);\n      this.reflow();\n    },\n\n    events : function () {\n      this.S(window).off('.equalizer').on('resize.fndtn.equalizer', function (e) {\n        this.reflow();\n      }.bind(this));\n    },\n\n    equalize : function (equalizer) {\n      var isStacked = false,\n          group = equalizer.data('equalizer'),\n          settings = equalizer.data(this.attr_name(true)+'-init') || this.settings,\n          vals,\n          firstTopOffset;\n\n      if (settings.act_on_hidden_el) {\n        vals = group ? equalizer.find('['+this.attr_name()+'-watch=\"'+group+'\"]') : equalizer.find('['+this.attr_name()+'-watch]');\n      }\n      else {\n        vals = group ? equalizer.find('['+this.attr_name()+'-watch=\"'+group+'\"]:visible') : equalizer.find('['+this.attr_name()+'-watch]:visible');\n      }\n      \n      if (vals.length === 0) {\n        return;\n      }\n\n      settings.before_height_change();\n      equalizer.trigger('before-height-change.fndth.equalizer');\n      vals.height('inherit');\n\n      if (settings.equalize_on_stack === false) {\n        firstTopOffset = vals.first().offset().top;\n        vals.each(function () {\n          if ($(this).offset().top !== firstTopOffset) {\n            isStacked = true;\n            return false;\n          }\n        });\n        if (isStacked) {\n          return;\n        }\n      }\n\n      var heights = vals.map(function () { return $(this).outerHeight(false) }).get();\n\n      if (settings.use_tallest) {\n        var max = Math.max.apply(null, heights);\n        vals.css('height', max);\n      } else {\n        var min = Math.min.apply(null, heights);\n        vals.css('height', min);\n      }\n\n      settings.after_height_change();\n      equalizer.trigger('after-height-change.fndtn.equalizer');\n    },\n\n    reflow : function () {\n      var self = this;\n\n      this.S('[' + this.attr_name() + ']', this.scope).each(function () {\n        var $eq_target = $(this),\n            media_query = $eq_target.data('equalizer-mq'),\n            ignore_media_query = true;\n\n        if (media_query) {\n          media_query = 'is_' + media_query.replace(/-/g, '_');\n          if (Foundation.utils.hasOwnProperty(media_query)) {\n            ignore_media_query = false;\n          }\n        }\n\n        self.image_loaded(self.S('img', this), function () {\n          if (ignore_media_query || Foundation.utils[media_query]()) {\n            self.equalize($eq_target)\n          } else {\n            var vals = $eq_target.find('[' + self.attr_name() + '-watch]:visible');\n            vals.css('height', 'auto');\n          }\n        });\n      });\n    }\n  };\n})(jQuery, window, window.document);\n"]}